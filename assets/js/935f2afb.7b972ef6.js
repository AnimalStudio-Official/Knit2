"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[53],{1109:e=>{e.exports=JSON.parse('{"pluginId":"default","version":"current","label":"Next","banner":null,"badge":false,"className":"docs-version-current","isLast":true,"docsSidebars":{"defaultSidebar":[{"type":"link","label":"About","href":"/Crystal/docs/intro","docId":"intro"},{"type":"link","label":"Getting Started","href":"/Crystal/docs/gettingstarted","docId":"gettingstarted"},{"type":"link","label":"Services","href":"/Crystal/docs/services","docId":"services"},{"type":"link","label":"Controllers","href":"/Crystal/docs/controllers","docId":"controllers"},{"type":"link","label":"Util","href":"/Crystal/docs/util","docId":"util"},{"type":"link","label":"Execution Model","href":"/Crystal/docs/executionmodel","docId":"executionmodel"},{"type":"link","label":"Examples","href":"/Crystal/docs/examples","docId":"examples"},{"type":"link","label":"Middleware","href":"/Crystal/docs/middleware","docId":"middleware"},{"type":"link","label":"VS Code Snippets","href":"/Crystal/docs/vscodesnippets","docId":"vscodesnippets"}]},"docs":{"controllers":{"id":"controllers","title":"Controllers","description":"Controllers Defined","sidebar":"defaultSidebar"},"examples":{"id":"examples","title":"Examples","description":"Start All Services","sidebar":"defaultSidebar"},"executionmodel":{"id":"executionmodel","title":"Execution Model","description":"Lifecycle","sidebar":"defaultSidebar"},"gettingstarted":{"id":"gettingstarted","title":"Getting Started","description":"Install","sidebar":"defaultSidebar"},"intro":{"id":"intro","title":"About","description":"A lightweight framework derived from Knit by Sleitnick that simplifies communication between core parts of your Roblox experience and seamlessly bridges the gap between the server and the client.","sidebar":"defaultSidebar"},"middleware":{"id":"middleware","title":"Middleware","description":"Crystal\'s networking layer uses the Comm module internally, which allows for middleware to be introduced at both the inbound and outbound level. For example, if a service had a client method called GetMoney(player), and the client called that method, your service would then fire that function. If there is any inbound middleware on the server, the inbound middleware would fire before GetMoney is fired. And the outbound middleware would fire after GetMoney is fired.","sidebar":"defaultSidebar"},"services":{"id":"services","title":"Services","description":"Services Defined","sidebar":"defaultSidebar"},"util":{"id":"util","title":"Util","description":"Crystal via ModuleScript","sidebar":"defaultSidebar"},"vscodesnippets":{"id":"vscodesnippets","title":"VS Code Snippets","description":"Being able to quickly create services, controllers, or other Crystal-related items is very useful when using Crystal as a framework. To keep Crystal lightweight, there are no required extensions or plugins. Instead, below are some VS Code snippets that can be used to speed up development.","sidebar":"defaultSidebar"}}}')}}]);